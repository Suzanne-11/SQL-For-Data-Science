Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
SELECT COUNT(*)
FROM table_name

i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

PK :- Primary Key, FK :- Foreign Key

SELECT COUNT(DISTINCT(PK/FK))
FROM table_name

i. Business = PK(id): 10000
ii. Hours = FK(business_id): 1562
iii. Category = FK(business_id): 2643
iv. Attribute = FK(business_id): 1115
v. Review = PK(id): 10000, FK(business_id): 8090, FK(user_id): 9581
vi. Checkin = FK(business_id): 493
vii. Photo = PK(id): 10000, FK(business_id): 6493
viii. Tip = FK(user_id): 537, FK(business_id): 3979
ix. User = PK(id): 10000
x. Friend = FK(user_id): 11
xi. Elite_years = FK(user_id): 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer:
	NO	
	
	SQL code used to arrive at answer:

	SELECT * 
	FROM user
	WHERE 
		id = null or 
		name = null or 
		review_count = null or 
		yelping_since = null or 
		useful = null or 
		funny = null or 
		cool = null or 
		fans = null or 
		average_stars = null or 
		compliment_hot = null or 
		compliment_more = null or 
		compliment_profile = null or 
		compliment_cute = null or 
		compliment_list = null or 
		compliment_note = null or 
		compliment_plain = null or 
		compliment_cool = null or 
		compliment_funny = null or 
		compliment_writer = null or 
		compliment_photos = null

+----+------+--------------+---------------+--------+-------+------+------+---------------+----------------+-----------------+--------------------+-----------------+-----------------+-----------------+------------------+-----------------+------------------+-------------------+-------------------+
| id | name | review_count | yelping_since | useful | funny | cool | fans | average_stars | compliment_hot | compliment_more | compliment_profile | compliment_cute | compliment_list | compliment_note | compliment_plain | compliment_cool | compliment_funny | compliment_writer | compliment_photos |
+----+------+--------------+---------------+--------+-------+------+------+---------------+----------------+-----------------+--------------------+-----------------+-----------------+-----------------+------------------+-----------------+------------------+-------------------+-------------------+
+----+------+--------------+---------------+--------+-------+------+------+---------------+----------------+-----------------+--------------------+-----------------+-----------------+-----------------+------------------+-----------------+------------------+-------------------+-------------------+
(Zero rows)
	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

SELECT MIN(column_name), MAX(column_name), AVG(column_name) FROM table_name;


	i. Table: Review, Column: Stars
	
		min: 1 		max: 5		avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min: 1.0		max: 5.0		avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2		avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000		avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:

	SELECT city, review_count
	FROM business
	GROUP BY city
	ORDER BY review_count DESC
	
	
	Copy and Paste the Result Below:
	+------------------------+--------------+
	| city                   | review_count |
	+------------------------+--------------+
	| Woodmere Village       |          242 |
	| Mount Lebanon          |          138 |
	| Charlotte              |          120 |
	| McMurray               |          112 |
	| North York             |          109 |
	| Enterprise             |           89 |
	| Matthews               |           77 |
	| Munroe Falls           |           74 |
	| Ahwatukee              |           69 |
	| Pittsburgh             |           68 |
	| Woodmere               |           68 |
	| Tolleson               |           65 |
	| Pineville              |           63 |
	| Carnegie               |           61 |
	| Macedonia              |           58 |
	| Markham                |           54 |
	| Whitchurch-Stouffville |           52 |
	| Windsor                |           50 |
	| Goodyear               |           49 |
	| Gibsonia               |           45 |
	| Summerlin              |           44 |
	| Peninsula              |           42 |
	| Richfield              |           42 |
	| Dormont                |           40 |
	| nboulder city          |           40 |
	+------------------------+--------------+
	(Output limit exceeded, 25 of 362 total rows shown)
	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

SELECT stars, SUM(review_count)
FROM business
WHERE city IS 'Avon'
GROUP BY stars

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

+-------+-------------------+
| stars | sum(review_count) |
+-------+-------------------+
|   1.5 |                10 |
|   2.5 |                 6 |
|   3.5 |                88 |
|   4.0 |                21 |
|   4.5 |                31 |
|   5.0 |                 3 |
+-------+-------------------+


ii. Beachwood

SQL code used to arrive at answer:

SELECT stars, SUM(review_count)
FROM business
WHERE city IS 'Beachwood'
GROUP BY stars

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

+-------+-------------------+
| stars | sum(review_count) |
+-------+-------------------+
|   2.0 |                 8 |
|   2.5 |                 3 |
|   3.0 |                11 |
|   3.5 |                 6 |
|   4.0 |                69 |
|   4.5 |                17 |
|   5.0 |                23 |
+-------+-------------------+


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:

	SELECT name, SUM(review_count) AS number_of_reviews
	FROM user
	GROUP BY id
	ORDER BY SUM(review_count) DESC
	
		
	Copy and Paste the Result Below:
	+-----------+-------------------+
	| name      | number_of_reviews |
	+-----------+-------------------+
	| Gerald    |              2000 |
	| Sara      |              1629 |
	| Yuri      |              1339 |
	| .Hon      |              1246 |
	| William   |              1215 |
	| Harald    |              1153 |
	| eric      |              1116 |
	| Roanna    |              1039 |
	| Mimi      |               968 |
	| Christine |               930 |
	| Ed        |               904 |
	| Nicole    |               864 |
	| Fran      |               862 |
	| Mark      |               861 |
	| Christina |               842 |
	| Dominic   |               836 |
	| Lissa     |               834 |
	| Lisa      |               813 |
	| Alison    |               775 |
	| Sui       |               754 |
	| Tim       |               702 |
	| L         |               696 |
	| Angela    |               694 |
	| Crissy    |               676 |
	| Lyn       |               675 |
	+-----------+-------------------+
	(Output limit exceeded, 25 of 10000 total rows shown)

Top 3 users are: Gerald, Sara and Yuri
		


8. Does posing more reviews correlate with more fans?

	SELECT review_count, fans
	FROM user
	ORDER BY review_count DESC 

	+--------------+------+
	| review_count | fans |
	+--------------+------+
	|         2000 |  253 |
	|         1629 |   50 |
	|         1339 |   76 |
	|         1246 |  101 |
	|         1215 |  126 |
	|         1153 |  311 |
	|         1116 |   16 |
	|         1039 |  104 |
	|          968 |  497 |
	|          930 |  173 |
	|          904 |   38 |
	|          864 |   43 |
	|          862 |  124 |
	|          861 |  115 |
	|          842 |   85 |
	|          836 |   37 |
	|          834 |  120 |
	|          813 |  159 |
	|          775 |   61 |
	|          754 |   78 |
	|          702 |   35 |
	|          696 |   10 |
	|          694 |  101 |
	|          676 |   25 |
	|          675 |   45 |
	+--------------+------+
	(Output limit exceeded, 25 of 10000 total rows shown)

	Please explain your findings and interpretation of the results:
	There does not appear to be any correlation between posing more reviews and fans.

	

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:
	There are more reviews with the word 'love' as compared to the word 'hate' in them.

	
	SQL code used to arrive at answer:

	SELECT count(*)
	FROM review
	WHERE text LIKE '%love%' 

	+----------+
	| count(*) |
	+----------+
	|     1780 |
	+----------+

	SELECT count(*)
	FROM review
	WHERE text LIKE '%hate%' 

	+----------+
	| count(*) |
	+----------+
	|      232 |
	+----------+
	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:

	SELECT name, SUM(fans)
	FROM user
	GROUP BY id
	ORDER BY SUM(fans) DESC 
	limit 10
	
	Copy and Paste the Result Below:
	+-----------+-----------+
	| name      | SUM(fans) |
	+-----------+-----------+
	| Amy       |       503 |
	| Mimi      |       497 |
	| Harald    |       311 |
	| Gerald    |       253 |
	| Christine |       173 |
	| Lisa      |       159 |
	| Cat       |       133 |
	| William   |       126 |
	| Fran      |       124 |
	| Lissa     |       120 |
	+-----------+-----------+

	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
City: Mesa			Category: Restaurants
	
i. Do the two groups you chose to analyze have a different distribution of hours?
Ans: Yes, there are two groups based on distribution of hours. There is one group which is open from 10:30am to 10:00pm and the other group operates from 11:00 am to 11:00pm and some operate from 11:00am to 10:pm

/*
SELECT c.category, b.city, h.hours
FROM (business b INNER JOIN category c
ON b.id = c.business_id) INNER JOIN hours h ON b.id = h.business_id
WHERE b.city = 'Mesa' AND c.category = 'Restaurants'
GROUP BY h.hours
*/

+-------------+------+-----------------------+
| category    | city | hours                 |
+-------------+------+-----------------------+
| Restaurants | Mesa | Friday|10:30-22:00    |
| Restaurants | Mesa | Friday|11:00-22:00    |
| Restaurants | Mesa | Monday|10:30-22:00    |
| Restaurants | Mesa | Monday|11:00-21:00    |
| Restaurants | Mesa | Saturday|10:30-22:00  |
| Restaurants | Mesa | Saturday|11:00-22:00  |
| Restaurants | Mesa | Sunday|11:00-20:00    |
| Restaurants | Mesa | Sunday|11:00-21:00    |
| Restaurants | Mesa | Thursday|10:30-22:00  |
| Restaurants | Mesa | Thursday|11:00-21:00  |
| Restaurants | Mesa | Tuesday|10:30-22:00   |
| Restaurants | Mesa | Tuesday|11:00-21:00   |
| Restaurants | Mesa | Wednesday|10:30-22:00 |
| Restaurants | Mesa | Wednesday|11:00-21:00 |
+-------------+------+-----------------------+


ii. Do the two groups you chose to analyze have a different number of reviews?
Ans:
YES, both the groups have a different number of reviews. The group of Restaurants operating from 10:30 am to 10:00pm have a larger number of reviews compared to the other group. It is seen that The group of Restaurants operating from 10:30 am to 10:00pm have 138 ratings more as compared to the other group. However, when compared on the basis of rating, both of the groups have a rating between 4-5 stars.
         
/*
SELECT b.city, c.category, h.hours, b.review_count AS review,
CASE 
    WHEN b.stars BETWEEN 2 AND 3 THEN '2-3 stars'
    WHEN b.stars BETWEEN 4 AND 5 THEN '4-5 stars'
END AS rating
FROM (business b INNER JOIN category c
ON b.id = c.business_id) INNER JOIN hours h ON h.business_id = b.id 
WHERE b.city = 'Mesa' AND c.category = 'Restaurants'
GROUP BY b.review_count
*/

+------+-------------+----------------------+--------+-----------+
| city | category    | hours                | review | rating    |
+------+-------------+----------------------+--------+-----------+
| Mesa | Restaurants | Saturday|11:00-22:00 |    129 | 4-5 stars |
| Mesa | Restaurants | Saturday|10:30-22:00 |    267 | 4-5 stars |
+------+-------------+----------------------+--------+-----------+
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
Ans:
Yes, it is seen that the location with postal code '85210' have more ratings compared to the location with the postal code '85204'.

/*
SELECT b.city, c.category, h.hours, b.review_count AS review, b.postal_code
FROM (business b INNER JOIN category c
ON b.id = c.business_id) INNER JOIN hours h ON h.business_id = b.id 
WHERE b.city = 'Mesa' AND c.category = 'Restaurants'
GROUP BY b.postal_code
*/

+------+-------------+----------------------+--------+-------------+
| city | category    | hours                | review | postal_code |
+------+-------------+----------------------+--------+-------------+
| Mesa | Restaurants | Saturday|11:00-22:00 |    129 | 85204       |
| Mesa | Restaurants | Saturday|10:30-22:00 |    267 | 85210       |
+------+-------------+----------------------+--------+-------------+



		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
      The Restaurants that have lower reviews as closed. It is seen that the restaurant that has 129 reviews is closed and the restaurant having 267 reviews is open.  
         
ii. Difference 2:
      The Restaurants that have lesser ratings are closed. It is seen that restaurant having 4.0 stars is closed and restaurant having 5.0 stars is open.  
         
/*

SELECT b.is_open, b.stars, b.review_count
FROM (business b INNER JOIN category c
ON b.id = c.business_id) 
WHERE b.city = 'Mesa' AND c.category = 'Restaurants'

*/

+---------+-------+--------------+
| is_open | stars | review_count |
+---------+-------+--------------+
|       0 |   4.0 |          129 |
|       1 |   5.0 |          267 |
+---------+-------+--------------+
         
	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
Cluster businesses to find commonalities or anomalies between them. I'll be analysing all the different business categories for the state Arizona and try to find commonalities and anomalies between them.    
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:

Ans: I'll be using the categories table as well as the business table for this analysis.

                  
iii. Output of your finished dataset:

+------------+---------------+--------------+-----------------+-------------+
| Categories | average_stars | review_count | city            | postal_code |
+------------+---------------+--------------+-----------------+-------------+
|          4 |           5.0 |           11 | Sun City        | 85373       |
|          5 |           5.0 |            3 | Surprise        | 85374       |
|         34 | 4.47826086957 |           33 | Chandler        | 85225       |
|         21 |          4.16 |           13 | Tempe           | 85282       |
|          3 |           4.0 |           23 | Tolleson        | 85353       |
|         28 |           4.0 |            4 | Scottsdale      | 85254       |
|         21 | 3.95652173913 |           16 | Mesa            | 85215       |
|         50 | 3.80821917808 |          431 | Phoenix         | 85028       |
|          3 |           3.5 |           83 | Litchfield Park | 85340       |
|          4 |           3.5 |           21 | Fountain Hills  | 85268       |
|          6 |           3.5 |            9 | Peoria          | 85381       |
|          2 |           3.0 |           30 | Avondale        | 85392       |
|          4 |           2.5 |           10 | Gilbert         | 85296       |
|          2 |           2.5 |            3 | Glendale        | 85301       |
+------------+---------------+--------------+-----------------+-------------+

+-------------------------------+-------+--------------+---------+
| category                      | stars | review_count | is_open |
+-------------------------------+-------+--------------+---------+
| IT Services & Computer Repair |   5.0 |           11 |       1 |
| Electronics Repair            |   5.0 |           11 |       1 |
| Local Services                |   5.0 |           11 |       1 |
| Mobile Phone Repair           |   5.0 |           11 |       1 |
| Pet Boarding/Pet Sitting      |   5.0 |            3 |       0 |
| Pet Transportation            |   5.0 |            3 |       0 |
| Dog Walkers                   |   5.0 |            3 |       0 |
| Pets                          |   5.0 |            3 |       0 |
| Pet Services                  |   5.0 |            3 |       0 |
+-------------------------------+-------+--------------+---------+

+----------------+-------+--------------+---------+
| category       | stars | review_count | is_open |
+----------------+-------+--------------+---------+
| Mobile Phones  |   2.0 |            4 |       1 |
| Shopping       |   2.0 |            4 |       1 |
| Restaurants    |   3.0 |           10 |       1 |
| Fast Food      |   3.0 |           10 |       1 |
| American (New) |   2.5 |            3 |       0 |
| Restaurants    |   2.5 |            3 |       0 |
+----------------+-------+--------------+---------+


         
iv. Provide the SQL code you used to create your final dataset:

SELECT COUNT(DISTINCT(c.category)) AS Categories, AVG(b.stars) AS average_stars, b.review_count, b.city, b.postal_code
FROM business b INNER JOIN category c
ON b.id = c.business_id
WHERE state = 'AZ'
GROUP BY city
ORDER BY AVG(b.stars) DESC, b.review_count DESC

SELECT c.category, b.stars, b.review_count, b.is_open
FROM business b INNER JOIN category c
ON b.id = c.business_id
WHERE city = 'Surprise' or city = 'Sun City'


SELECT c.category, b.stars, b.review_count, b.is_open
FROM business b INNER JOIN category c
ON b.id = c.business_id
WHERE city = 'Gilbert' or city = 'Glendale'




Assumptions:

1. Essential Categories related to Electronic items, Health Care, Education, Banking will have the highest Ratings and Reviews because everyone uses them. Whereas categories related to leisure and comfort like Restaurants, Bakeries, Shopping, etc. will have lower reviews and ratings since everyone cannot afford them.

2. Categories with higher number of reviews will have a better rating.

3. Categories with higher ratings will be open.

4. Cities with larger category diversity(more number of categories) will have higher ratings. 

Observations:
1. It is seen that the city 'Sun City' and 'Surprise' has the highest rating of 5.0 with a review count of 11 and 3 respectively. they have 4 and 5 different business categories respectively. This is against assumption number 2 and 4.

2. It is seen that the city 'Phoenix' has the highest number of reviews i.e. 431 with an average rating of 3.81. There are 50 different business categories present. This is in favour of assumption number 2 and 4.

3. It is seen that the cities 'Gilbert' and 'Glendale' the least average rating of 2.5 stars with 10 and 3 reviews respectively. They have 4 and 2 different business categories respectively. This is in favour of assumption 2 and 4.

4. It is seen that businesses like 
	a) IT Services & Computer Repair (open)
	b) Electronics Repair			(open)
	c) Local Services				(open)
	d) Mobile Phone Repair			(open)
	e) Pet Related business like: Pet Boarding/Pet Sitting, Pet Transportation, Dog Walkers, Pet Services (closed) have the highest rating of 5.0
This is in favour of assumption 3 and 4 as all these activities are necessary in day-to-day life.
However, pet related businesses are closed. This might be because not many people own pets. This is against assumption 3.

5. It is also seen that in the city of 'Sun City', businesses related to electronic items and mobile phones are flourishing with the highest ratings. Also in the city of 'Surprise', pet related businesses are dominant.

6. It is seen that businesses that are related to leisure/comfort like
	a) Mobile Phones (open)
	b) Shopping   	(open)    
	c) Restaurants  (open)  
	d) Fast Food     (open) 
	e) American (New) (closed)
	f) Restaurants   (closed)
have the least reviews as well as least ratings. This might be due to the fact that people here cannot afford these items/activities. And so, some of the businesses are closed. This is in against assumption 4.
This is in favour of assumption number 1 and 2.


Conclusion:
1. It is seen that the assumption is true in most of the cases that essential businesses have a higher rating and are open.

2. Most of the observations favour assumption 2. 

3. Most of the observations favour assumption 3.

4. Assumption 4 is proved true since all the cities with larger catrgory diversity have ratings > 3.5 
City		No. Of Categories		Avg Ratings
---------------------------------------------------
Chandler		34					4.48
Tempe			21					4.16
Scottsdale		28					4.0
Mesa			21					3.96
Phoenix			50					3.81